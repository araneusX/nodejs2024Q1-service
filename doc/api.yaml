openapi: 3.0.0
paths:
  /track:
    get:
      operationId: TrackController_getAllTracks
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ViewTrackDto"
      tags: &a1
        - Track
    post:
      operationId: TrackController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTrackDto"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ViewTrackDto"
      tags: *a1
  /track/{trackId}:
    get:
      operationId: TrackController_getTrackById
      parameters:
        - name: trackId
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ViewTrackDto"
      tags: *a1
    put:
      operationId: TrackController_updatePassword
      parameters:
        - name: trackId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTrackDto"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ViewTrackDto"
      tags: *a1
    delete:
      operationId: TrackController_deleteTrack
      parameters:
        - name: trackId
          required: true
          in: path
          schema:
            type: string
      responses:
        "204":
          description: ""
      tags: *a1
  /album:
    get:
      operationId: AlbumController_getAllAlbums
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ViewAlbumDto"
      tags: &a2
        - Album
    post:
      operationId: AlbumController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAlbumDto"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ViewAlbumDto"
      tags: *a2
  /album/{albumId}:
    get:
      operationId: AlbumController_getAlbumById
      parameters:
        - name: albumId
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ViewAlbumDto"
      tags: *a2
    put:
      operationId: AlbumController_updatePassword
      parameters:
        - name: albumId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateAlbumDto"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ViewAlbumDto"
      tags: *a2
    delete:
      operationId: AlbumController_deleteAlbum
      parameters:
        - name: albumId
          required: true
          in: path
          schema:
            type: string
      responses:
        "204":
          description: ""
      tags: *a2
  /user:
    get:
      operationId: UserController_getAllUsers
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ViewUserDto"
      tags: &a3
        - User
    post:
      operationId: UserController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserDto"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ViewUserDto"
      tags: *a3
  /user/{userId}:
    get:
      operationId: UserController_getUserById
      parameters:
        - name: userId
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ViewUserDto"
      tags: *a3
    put:
      operationId: UserController_updatePassword
      parameters:
        - name: userId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePasswordDto"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ViewUserDto"
      tags: *a3
    delete:
      operationId: UserController_deleteUser
      parameters:
        - name: userId
          required: true
          in: path
          schema:
            type: string
      responses:
        "204":
          description: ""
      tags: *a3
  /artist:
    get:
      operationId: ArtistController_getAllArtists
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ViewArtistDto"
      tags: &a4
        - Artist
    post:
      operationId: ArtistController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateArtistDto"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ViewArtistDto"
      tags: *a4
  /artist/{artistId}:
    get:
      operationId: ArtistController_getArtistById
      parameters:
        - name: artistId
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ViewArtistDto"
      tags: *a4
    put:
      operationId: ArtistController_updatePassword
      parameters:
        - name: artistId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateArtistDto"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ViewArtistDto"
      tags: *a4
    delete:
      operationId: ArtistController_deleteArtist
      parameters:
        - name: artistId
          required: true
          in: path
          schema:
            type: string
      responses:
        "204":
          description: ""
      tags: *a4
  /favs:
    get:
      operationId: FavoritesController_getAllFavorites
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ViewFavoritesDto"
      tags: &a5
        - Favorites
  /favs/track/{id}:
    post:
      operationId: FavoritesController_addTrack
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ViewFavoritesDto"
      tags: *a5
    delete:
      operationId: FavoritesController_deleteTrack
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ViewFavoritesDto"
      tags: *a5
  /favs/album/{id}:
    post:
      operationId: FavoritesController_addAlbum
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ViewFavoritesDto"
      tags: *a5
    delete:
      operationId: FavoritesController_deleteAlbum
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ViewFavoritesDto"
      tags: *a5
  /favs/artist/{id}:
    post:
      operationId: FavoritesController_addArtist
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ViewFavoritesDto"
      tags: *a5
    delete:
      operationId: FavoritesController_deleteArtist
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ViewFavoritesDto"
      tags: *a5
info:
  title: Home Library API
  description: ""
  version: "1.0"
  contact: {}
tags: []
servers: []
components:
  schemas:
    ViewTrackDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        artistId:
          type: string
          nullable: true
        albumId:
          type: string
          nullable: true
        duration:
          type: number
      required:
        - id
        - name
        - artistId
        - albumId
        - duration
    CreateTrackDto:
      type: object
      properties:
        name:
          type: string
        artistId:
          type: string
        albumId:
          type: string
        duration:
          type: number
      required:
        - name
        - duration
    UpdateTrackDto:
      type: object
      properties:
        name:
          type: string
        artistId:
          type: string
        albumId:
          type: string
        duration:
          type: number
    ViewAlbumDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        year:
          type: number
        artistId:
          type: string
          nullable: true
      required:
        - id
        - name
        - year
        - artistId
    CreateAlbumDto:
      type: object
      properties:
        name:
          type: string
        year:
          type: number
        artistId:
          type: string
      required:
        - name
        - year
    UpdateAlbumDto:
      type: object
      properties:
        name:
          type: string
        year:
          type: number
        artistId:
          type: string
    ViewUserDto:
      type: object
      properties:
        version:
          type: number
        id:
          type: string
        login:
          type: string
        createdAt:
          type: number
        updatedAt:
          type: number
      required:
        - version
        - id
        - login
        - createdAt
        - updatedAt
    CreateUserDto:
      type: object
      properties:
        login:
          type: string
        password:
          type: string
      required:
        - login
        - password
    UpdatePasswordDto:
      type: object
      properties:
        oldPassword:
          type: string
        newPassword:
          type: string
      required:
        - oldPassword
        - newPassword
    ViewArtistDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        grammy:
          type: boolean
      required:
        - id
        - name
        - grammy
    CreateArtistDto:
      type: object
      properties:
        name:
          type: string
        grammy:
          type: boolean
      required:
        - name
        - grammy
    UpdateArtistDto:
      type: object
      properties:
        name:
          type: string
        grammy:
          type: boolean
    ViewFavoritesDto:
      type: object
      properties:
        artists:
          type: array
          items:
            $ref: "#/components/schemas/ViewArtistDto"
        albums:
          type: array
          items:
            $ref: "#/components/schemas/ViewAlbumDto"
        tracks:
          type: array
          items:
            $ref: "#/components/schemas/ViewTrackDto"
      required:
        - artists
        - albums
        - tracks
